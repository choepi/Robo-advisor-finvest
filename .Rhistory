runApp()
runApp()
runApp()
runApp()
tableGrob(overview_df)
overview_df <- round(overview_df,3)
a <- xts()
for (i in 1:length(portfolio_s)) {
if (portfolio_s2[i] > 0)
a <- na.omit(merge(a, ren[[i]]))
}
y <-window(a, start=Sys.Date()-365*2, end=Sys.Date())
ret_b <- sum(colMeans(y)*100)
sd_b <- sqrt(sum(colSds(y)))
n <- sum(portfolio_s)#length(portfolio_s[portfolio_s == 0])
ov_basic <- c(portfolio_s[portfolio_s != 0]/n,ret_b,sd_b,(ret_b-riskfree)/sd_b)
ov_mvp <- c(dat_mvp$Gewicht,mvpreturn,mvpvola,(mvpreturn-riskfree)/mvpvola)
ov_tp <- c(dat_tp$Gewicht,tpreturn,tpvola,(tpreturn-riskfree)/tpvola)
ov_max <- c(dat_max$Gewicht,max_return,max_vola,(max_return-riskfree)/max_vola)
overview_df <- data.frame("Basic"=ov_basic,"MVP"=ov_mvp,"TP"=ov_tp)
row.names(overview_df) <- c(dat_mvp$Asset,"Rendite","Vola","Sharp")
overview_df <- round(overview_df,3)
vals$p1 <- tableGrob(overview_df)
vals <- reactiveValues(p1=NULL)
a <- xts()
for (i in 1:length(portfolio_s)) {
if (portfolio_s2[i] > 0)
a <- na.omit(merge(a, ren[[i]]))
}
y <-window(a, start=Sys.Date()-365*2, end=Sys.Date())
ret_b <- sum(colMeans(y)*100)
sd_b <- sqrt(sum(colSds(y)))
n <- sum(portfolio_s)#length(portfolio_s[portfolio_s == 0])
ov_basic <- c(portfolio_s[portfolio_s != 0]/n,ret_b,sd_b,(ret_b-riskfree)/sd_b)
ov_mvp <- c(dat_mvp$Gewicht,mvpreturn,mvpvola,(mvpreturn-riskfree)/mvpvola)
ov_tp <- c(dat_tp$Gewicht,tpreturn,tpvola,(tpreturn-riskfree)/tpvola)
ov_max <- c(dat_max$Gewicht,max_return,max_vola,(max_return-riskfree)/max_vola)
overview_df <- data.frame("Basic"=ov_basic,"MVP"=ov_mvp,"TP"=ov_tp)
row.names(overview_df) <- c(dat_mvp$Asset,"Rendite","Vola","Sharp")
overview_df <- round(overview_df,3)
vals$p1 <- tableGrob(overview_df)
datatable(round(overview_df,3), options = list(dom = 't'))
vals$p1
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(forecast)
library(hts)
plot_forecast<-function(x){
auscafe <-as.ts(x)
train <- head(auscafe,-200)
h <- length(auscafe) - length(train)
ETS <- forecast(ets(train), h=h)
ARIMA <- forecast(auto.arima(train, lambda=0, biasadj=TRUE),h=h)
NNAR <- forecast(nnetar(train), h=h)
TBATS <- forecast(tbats(train, biasadj=TRUE), h=h)
Combination <- (ETS[["mean"]] + ARIMA[["mean"]] +
NNAR[["mean"]] + TBATS[["mean"]])/4
autoplot(auscafe) +
autolayer(ETS, series="ETS", PI=FALSE) +
autolayer(ARIMA, series="ARIMA", PI=FALSE) +
autolayer(NNAR, series="NNAR", PI=FALSE) +
autolayer(TBATS, series="TBATS", PI=FALSE) +
autolayer(Combination, series="Combination") +
xlab(as.Date(index(x))) + ylab("$ billion") +
ggtitle("Australian monthly expenditure on eating out")
}
weightened.portfolio2
runApp()
runApp()
weightened.portfolio2
View(weightened.portfolio.tp)
plot_forecast(weightened.portfolio.tp$Adjusted)
weightened.portfolio.tp$Adjusted
plot_forecast<-function(x,b){
auscafe <-as.ts(x)
train <- head(auscafe,-10)
h <- length(auscafe)+b
ETS <- forecast(ets(train), h=h)
ARIMA <- forecast(auto.arima(train, lambda=0, biasadj=TRUE),h=h)
NNAR <- forecast(nnetar(train), h=h)
TBATS <- forecast(tbats(train, biasadj=TRUE), h=h)
Combination <- (ETS[["mean"]] + ARIMA[["mean"]] +
NNAR[["mean"]] + TBATS[["mean"]])/4
autoplot(auscafe) +
autolayer(ETS, series="ETS", PI=FALSE) +
autolayer(ARIMA, series="ARIMA", PI=FALSE) +
autolayer(NNAR, series="NNAR", PI=FALSE) +
autolayer(TBATS, series="TBATS", PI=FALSE) +
autolayer(Combination, series="Combination") +
xlab(as.Date(index(x))) + ylab("$ billion") +
ggtitle("Australian monthly expenditure on eating out")
}
plot_forecast(weightened.portfolio.tp$Adjusted)
plot_forecast(weightened.portfolio.tp$Adjusted,10)
plot_forecast<-function(x,b){
auscafe <-as.ts(x)
train <- tail(auscafe,-10)
h <- length(auscafe)+b
ETS <- forecast(ets(train), h=h)
ARIMA <- forecast(auto.arima(train, lambda=0, biasadj=TRUE),h=h)
NNAR <- forecast(nnetar(train), h=h)
TBATS <- forecast(tbats(train, biasadj=TRUE), h=h)
Combination <- (ETS[["mean"]] + ARIMA[["mean"]] +
NNAR[["mean"]] + TBATS[["mean"]])/4
autoplot(auscafe) +
autolayer(ETS, series="ETS", PI=FALSE) +
autolayer(ARIMA, series="ARIMA", PI=FALSE) +
autolayer(NNAR, series="NNAR", PI=FALSE) +
autolayer(TBATS, series="TBATS", PI=FALSE) +
autolayer(Combination, series="Combination") +
xlab(as.Date(index(x))) + ylab("$ billion") +
ggtitle("Australian monthly expenditure on eating out")
}
plot_forecast(weightened.portfolio.tp$Adjusted,10)
x <- weightened.portfolio.tp$Adjusted
auscafe <-as.ts(x)
train <- tail(auscafe,-10)
train
train <- head(auscafe,-10)
train
train <- head(auscafe,10)
train
train <- tail(auscafe,10)
train
auscafe
x
runApp()
runApp()
runApp()
auscafe <-as.ts(x)
auscafe
plot_forecast<-function(x,b){
auscafe <-as.ts(x)
train <- head(auscafe,-10)
h <- length(auscafe)+b
ETS <- forecast(ets(train), h=h)
ARIMA <- forecast(auto.arima(train, lambda=0, biasadj=TRUE),h=h)
NNAR <- forecast(nnetar(train), h=h)
TBATS <- forecast(tbats(train, biasadj=TRUE), h=h)
Combination <- (ETS[["mean"]] + ARIMA[["mean"]] +
NNAR[["mean"]] + TBATS[["mean"]])/4
autoplot(auscafe) +
autolayer(ETS, series="ETS", PI=FALSE) +
autolayer(ARIMA, series="ARIMA", PI=FALSE) +
autolayer(NNAR, series="NNAR", PI=FALSE) +
autolayer(TBATS, series="TBATS", PI=FALSE) +
autolayer(Combination, series="Combination") +
xlab(as.Date(index(x))) + ylab("$ billion") +
ggtitle("Australian monthly expenditure on eating out")
}
plot_forecast(weightened.portfolio.tp2$Adjusted)
plot_forecast(weightened.portfolio.tp$Adjusted)
plot_forecast(weightened.portfolio.tp$Adjusted,10)
autoplot(auscafe) +
autolayer(ETS, series="ETS", PI=FALSE) +
autolayer(ARIMA, series="ARIMA", PI=FALSE) +
autolayer(NNAR, series="NNAR", PI=FALSE) +
autolayer(TBATS, series="TBATS", PI=FALSE) +
autolayer(Combination, series="Combination",linewidth=3) +
xlab(as.Date(index(x))) + ylab("$ billion") +
ggtitle("Australian monthly expenditure on eating out")
plot_forecast<-function(x,b){
auscafe <-as.ts(x)
train <- head(auscafe,-10)
h <- length(auscafe)+b
ETS <- forecast(ets(train), h=h)
ARIMA <- forecast(auto.arima(train, lambda=0, biasadj=TRUE),h=h)
NNAR <- forecast(nnetar(train), h=h)
TBATS <- forecast(tbats(train, biasadj=TRUE), h=h)
Combination <- (ETS[["mean"]] + ARIMA[["mean"]] +
NNAR[["mean"]] + TBATS[["mean"]])/4
autoplot(auscafe) +
autolayer(ETS, series="ETS", PI=FALSE) +
autolayer(ARIMA, series="ARIMA", PI=FALSE) +
autolayer(NNAR, series="NNAR", PI=FALSE) +
autolayer(TBATS, series="TBATS", PI=FALSE) +
autolayer(Combination, series="Combination",linewidth=3) +
xlab(as.Date(index(x))) + ylab("$ billion") +
ggtitle("Australian monthly expenditure on eating out")
}
auscafe <-as.ts(x)
train <- head(auscafe,-10)
h <- length(auscafe)+b
b=10
auscafe <-as.ts(x)
train <- head(auscafe,-10)
h <- length(auscafe)+b
ETS <- forecast(ets(train), h=h)
ARIMA <- forecast(auto.arima(train, lambda=0, biasadj=TRUE),h=h)
NNAR <- forecast(nnetar(train), h=h)
TBATS <- forecast(tbats(train, biasadj=TRUE), h=h)
Combination <- (ETS[["mean"]] + ARIMA[["mean"]] +
NNAR[["mean"]] + TBATS[["mean"]])/4
autoplot(auscafe) +
autolayer(ETS, series="ETS", PI=FALSE) +
autolayer(ARIMA, series="ARIMA", PI=FALSE) +
autolayer(NNAR, series="NNAR", PI=FALSE) +
autolayer(TBATS, series="TBATS", PI=FALSE) +
autolayer(Combination, series="Combination",linewidth=3) +
xlab(as.Date(index(x))) + ylab("$ billion") +
ggtitle("Australian monthly expenditure on eating out")
auscafe <-as.ts(x)
train <- head(auscafe,-10)
h <- length(auscafe)+b
ETS <- forecast(ets(train), h=h)
ARIMA <- forecast(auto.arima(train, lambda=0, biasadj=TRUE),h=h)
NNAR <- forecast(nnetar(train), h=h)
TBATS <- forecast(tbats(train, biasadj=TRUE), h=h)
Combination <- (ETS[["mean"]] + ARIMA[["mean"]] +
NNAR[["mean"]] + TBATS[["mean"]])/4
autoplot(auscafe) +
autolayer(ETS, series="ETS", PI=FALSE) +
autolayer(ARIMA, series="ARIMA", PI=FALSE) +
autolayer(NNAR, series="NNAR", PI=FALSE) +
autolayer(TBATS, series="TBATS", PI=FALSE) +
autolayer(Combination, series="Combination",linewidth=2) +
xlab(as.Date(index(x))) + ylab("$ billion") +
ggtitle("Australian monthly expenditure on eating out")
auscafe <-as.ts(x)
train <- head(auscafe,-10)
h <- length(auscafe)+b
ETS <- forecast(ets(train), h=h)
ARIMA <- forecast(auto.arima(train, lambda=0, biasadj=TRUE),h=h)
NNAR <- forecast(nnetar(train), h=h)
TBATS <- forecast(tbats(train, biasadj=TRUE), h=h)
Combination <- (ETS[["mean"]] + ARIMA[["mean"]] +
NNAR[["mean"]] + TBATS[["mean"]])/4
autoplot(auscafe) +
autolayer(ETS, series="ETS", PI=FALSE, color="red") +
autolayer(ARIMA, series="ARIMA", PI=FALSE) +
autolayer(NNAR, series="NNAR", PI=FALSE) +
autolayer(TBATS, series="TBATS", PI=FALSE) +
autolayer(Combination, series="Combination",linewidth=2) +
xlab(as.Date(index(x))) + ylab("$ billion") +
ggtitle("Australian monthly expenditure on eating out")
auscafe <-as.ts(x)
train <- head(auscafe,-10)
h <- length(auscafe)+b
ETS <- forecast(ets(train), h=h)
ARIMA <- forecast(auto.arima(train, lambda=0, biasadj=TRUE),h=h)
NNAR <- forecast(nnetar(train), h=h)
TBATS <- forecast(tbats(train, biasadj=TRUE), h=h)
Combination <- (ETS[["mean"]] + ARIMA[["mean"]] +
NNAR[["mean"]] + TBATS[["mean"]])/4
autoplot(auscafe) +
autolayer(ETS, series="ETS", PI=FALSE, color="cyan") +
autolayer(ARIMA, series="ARIMA", PI=FALSE) +
autolayer(NNAR, series="NNAR", PI=FALSE) +
autolayer(TBATS, series="TBATS", PI=FALSE) +
autolayer(Combination, series="Combination",linewidth=2) +
xlab(as.Date(index(x))) + ylab("$ billion") +
ggtitle("Australian monthly expenditure on eating out")
plot_forecast<-function(x,b){
auscafe <-as.ts(x)
train <- head(auscafe,-10)
h <- length(auscafe)+b
ETS <- forecast(ets(train), h=h)
ARIMA <- forecast(auto.arima(train, lambda=0, biasadj=TRUE),h=h)
NNAR <- forecast(nnetar(train), h=h)
TBATS <- forecast(tbats(train, biasadj=TRUE), h=h)
Combination <- (ETS[["mean"]] + ARIMA[["mean"]] +
NNAR[["mean"]] + TBATS[["mean"]])/4
autoplot(auscafe) +
autolayer(ETS, series="ETS", PI=FALSE) +
autolayer(ARIMA, series="ARIMA", PI=FALSE) +
autolayer(NNAR, series="NNAR", PI=FALSE) +
autolayer(TBATS, series="TBATS", PI=FALSE) +
autolayer(Combination, series="Combination",linewidth=2) +
xlab(as.Date(index(x))) + ylab("$ billion") +
ggtitle("Australian monthly expenditure on eating out")
}
weight_easy_all <- function(){
}
plot_forecast<-function(x,b){
auscafe <-as.ts(x)
train <- head(auscafe,-10)
h <- length(auscafe)+b
ETS <- forecast(ets(train), h=h)
ARIMA <- forecast(auto.arima(train, lambda=0, biasadj=TRUE),h=h)
NNAR <- forecast(nnetar(train), h=h)
TBATS <- forecast(tbats(train, biasadj=TRUE), h=h)
Combination <- (ETS[["mean"]] + ARIMA[["mean"]] +
NNAR[["mean"]] + TBATS[["mean"]])/4
autoplot(auscafe) +
autolayer(ETS, series="ETS", PI=FALSE) +
autolayer(ARIMA, series="ARIMA", PI=FALSE) +
autolayer(NNAR, series="NNAR", PI=FALSE) +
autolayer(TBATS, series="TBATS", PI=FALSE) +
autolayer(Combination, series="Combination",linewidth=2) +
xlab(as.Date(index(x))) + ylab("$ billion") +
ggtitle("Australian monthly expenditure on eating out")
}
plot_forecast(weightened.portfolio.tp$Adjusted,30)
plot_forecast(weightened.portfolio.mvp$Adjusted,30)
weightened.portfolio.mvp$Adjusted
plot_forecast(weightened.portfolio.max$Adjusted,30)
plot_forecast(weightened.portfolio$Adjusted,30)
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
plot_forecast<-function(x,b,name_a){
auscafe <-as.ts(x)
train <- auscafe
h <- b
ETS <- forecast(ets(train), h=h)
ARIMA <- forecast(auto.arima(train, lambda=0, biasadj=TRUE),h=h)
NNAR <- forecast(nnetar(train), h=h)
TBATS <- forecast(tbats(train, biasadj=TRUE), h=h)
Combination <- (ETS[["mean"]] + ARIMA[["mean"]] +
NNAR[["mean"]] + TBATS[["mean"]])/4
ymin=min(x)-20
ymax=max(x)+20
p <- autoplot(auscafe) +
autolayer(ETS, series="ETS", PI=FALSE) +
autolayer(ARIMA, series="ARIMA", PI=FALSE) +
autolayer(NNAR, series="NNAR", PI=FALSE) +
autolayer(TBATS, series="TBATS", PI=FALSE) +
autolayer(Combination, series="Combination",linewidth=2) +
xlab(as.Date(index(x))) + ylab("CHF") + xlim(c(length(x)-30,length(x)+40))+
ylim(c(ymin,ymax))
ggtitle(name_a)
return(p)
}
runApp()
dat1<-reactive({weightened.portfolio.tp$Adjusted})
dat_reactive<-reactive({
d1 <- weightened.portfolio.tp$Adjusted
d2 <- weightened.portfolio.mvp$Adjusted
d3 <- weightened.portfolio.max$Adjusted
d4 <- weightened.portfolio$Adjusted
list(d1=d1,d2=d2,d3=d3,d4=d4)
})
dat_reactive(d1)
runApp()
runApp()
runApp()
runApp()
plot_forecast<-function(xs,b,name_a){
auscafe <-as.ts(xs)
train <- auscafe
h <- b
ETS <- forecast(ets(train), h=h)
ARIMA <- forecast(auto.arima(train, lambda=0, biasadj=TRUE),h=h)
NNAR <- forecast(nnetar(train), h=h)
TBATS <- forecast(tbats(train, biasadj=TRUE), h=h)
Combination <- (ETS[["mean"]] + ARIMA[["mean"]] +
NNAR[["mean"]] + TBATS[["mean"]])/4
p <- autoplot(auscafe) +
autolayer(ETS, series="ETS", PI=FALSE) +
autolayer(ARIMA, series="ARIMA", PI=FALSE) +
autolayer(NNAR, series="NNAR", PI=FALSE) +
autolayer(TBATS, series="TBATS", PI=FALSE) +
autolayer(Combination, series="Combination",linewidth=2) +
xlab(as.Date(index(xs))) + ylab("CHF") + xlim(c(0,length(x)+40))
+ylim(c(min(xs)-20,max(xs)+20))
ggtitle(name_a)
return(p)
}
runApp()
runApp()
runApp()
runApp()
runApp()
ength(xs)-40
length(xs)-40
runApp()
runApp()
runApp()
runApp()
xs <- weightened.portfolio.max
xs <- weightened.portfolio.max$Adjusted
auscafe <-as.ts(xs)
train <- auscafe
h <- b
ETS <- forecast(ets(train), h=h)
ARIMA <- forecast(auto.arima(train, lambda=0, biasadj=TRUE),h=h)
NNAR <- forecast(nnetar(train), h=h)
TBATS <- forecast(tbats(train, biasadj=TRUE), h=h)
Combination <- (ETS[["mean"]] + ARIMA[["mean"]] +
NNAR[["mean"]] + TBATS[["mean"]])/4
p <- autoplot(auscafe) +
autolayer(ETS, series = "ETS", PI = FALSE) +
autolayer(ARIMA, series = "ARIMA", PI = FALSE) +
autolayer(NNAR, series = "NNAR", PI = FALSE) +
autolayer(TBATS, series = "TBATS", PI = FALSE) +
autolayer(Combination, series = "Combination", linewidth = 2) +
xlab(as.Date(index(xs))) + ylab("CHF") +
xlim(c(length(xs) - 20, length(xs) + 40))+
scale_y_continuous(limits = c(min(xs[length(xs)-20:length(xs)]) - 100, max(xs[length(xs)-20:length(xs)]) + 100))+
ggtitle(name_a)
length(xs)
xs[length(xs)-20:length(xs)]
min(xs[length(xs)-20:length(xs)])
min(xs[length(xs)-20:length(xs)]) - 100
a <- coredata(xs)
a <- coredata(xs)
a
p <- autoplot(auscafe) +
autolayer(ETS, series = "ETS", PI = FALSE) +
autolayer(ARIMA, series = "ARIMA", PI = FALSE) +
autolayer(NNAR, series = "NNAR", PI = FALSE) +
autolayer(TBATS, series = "TBATS", PI = FALSE) +
autolayer(Combination, series = "Combination", linewidth = 2) +
xlab(as.Date(index(xs))) + ylab("CHF") +
xlim(c(length(a) - 20, length(a) + 40))+
scale_y_continuous(limits = c(min(a[length(a)-20:length(a)]) - 100, max(a[length(a)-20:length(a)]) + 100))+
ggtitle(name_a)
p <- autoplot(auscafe) +
autolayer(ETS, series = "ETS", PI = FALSE) +
autolayer(ARIMA, series = "ARIMA", PI = FALSE) +
autolayer(NNAR, series = "NNAR", PI = FALSE) +
autolayer(TBATS, series = "TBATS", PI = FALSE) +
autolayer(Combination, series = "Combination", linewidth = 2) +
xlab(as.Date(index(xs))) + ylab("CHF") +
xlim(c(length(a) - 20, length(a) + 40))+
ylim( c(min(a[length(a)-20:length(a)]) - 100, max(a[length(a)-20:length(a)]) + 100))+
ggtitle(name_a)
min(a[length(a)-20:length(a)]) - 100
max(a[length(a)-20:length(a)]) + 100)
max(a[length(a)-20:length(a)]) + 100
min(a[length(a)-20:length(a)])
max(a[length(a)-20:length(a)])
a[length(a)-20:length(a)]
max(a[length(a)-20:length(a)])
min(a[length(a)-20:length(a)])
max(a[length(a)-20:length(a)])
max(1,1,1,)
max(1,1,1)
max(c(1,1,1))
c(1,1,1)
max(c(1,1,1))
min(c(1,1,1))
# Create a vector
values <- c(5, 8, 3, 12, 6, 10, 7, 9, 4, 2)
# Get the maximum value
max_value <- max(values)
# Create a vector
# Create a vector
values <- c(5, 8, 3, 12, 6, 10, 7, 9, 4, 2)
# Get the maximum value
max_value <- max(values)
shiny::runApp()
runApp()
d4 <- weightened.portfolio$Adjusted
d4
d4 <- weightened.portfolio$Adjusted
d4
x=d4
runApp()
xs=d4
b=5*365
name_a="askdlfjl"
auscafe <-as.ts(xs)
a <- coredata(xs)
train <- auscafe
h <- b
ETS <- forecast(ets(train), h=h)
ARIMA <- forecast(auto.arima(train, lambda=0, biasadj=TRUE),h=h)
NNAR <- forecast(nnetar(train), h=h)
TBATS <- forecast(tbats(train, biasadj=TRUE), h=h)
Combination <- (ETS[["mean"]] + ARIMA[["mean"]] +
NNAR[["mean"]] + TBATS[["mean"]])/4
p <- autoplot(auscafe) +
autolayer(ETS, series = "ETS", PI = FALSE) +
autolayer(ARIMA, series = "ARIMA", PI = FALSE) +
autolayer(NNAR, series = "NNAR", PI = FALSE) +
autolayer(TBATS, series = "TBATS", PI = FALSE) +
autolayer(Combination, series = "Combination", linewidth = 2) +
xlab(as.Date(index(xs))) + ylab("CHF") +
xlim(c(length(a) - 20, length(a) + 40))+
ylim( c(min(a[length(a)-20:length(a)]) - 100,max(a[length(a)-20:length(a)]) + 100))+
ggtitle(name_a)
length(xs)
p <- autoplot(auscafe) +
autolayer(ETS, series = "ETS", PI = FALSE) +
autolayer(ARIMA, series = "ARIMA", PI = FALSE) +
autolayer(NNAR, series = "NNAR", PI = FALSE) +
autolayer(TBATS, series = "TBATS", PI = FALSE) +
autolayer(Combination, series = "Combination", linewidth = 2) +
xlab(as.Date(index(xs))) + ylab("CHF") +
xlim(c(length(a) - 20, length(a) + 40))+
ylim( c(min(xs[length(xs)-20:length(xs)]) - 100,max(xs[length(xs)-20:length(xs)]) + 100))+
ggtitle(name_a)
length(xs)-20
xs[length(xs)-20:length(xs)]
min(xs[length(xs)-20:length(xs)])
min(xs[length(xs)-20:length(xs)]) - 100
max(xs[length(xs)-20:length(xs)])
max(xs[length(xs)-20:length(xs)]) + 100)
max(xs[length(xs)-20:length(xs)]) + 100))
p <- autoplot(auscafe) +
autolayer(ETS, series = "ETS", PI = FALSE) +
autolayer(ARIMA, series = "ARIMA", PI = FALSE) +
autolayer(NNAR, series = "NNAR", PI = FALSE) +
autolayer(TBATS, series = "TBATS", PI = FALSE) +
autolayer(Combination, series = "Combination", linewidth = 2) +
xlab(as.Date(index(xs))) + ylab("CHF") +
xlim(c(length(a) - 20, length(a) + 40))+
ylim( c(min(xs[length(xs)-20:length(xs)]) - 100,max(xs[length(xs)-20:length(xs)]) + 100)+
ggtitle(name_a)
return(p)
max(xs[length(xs)-20:length(xs)]) + 100
max(xs[length(xs)-20:length(xs)])
min(xs[length(xs)-20:length(xs)])
shiny::runApp()
shiny::runApp()
